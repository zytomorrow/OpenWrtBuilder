name: Build_x86_64

on:
  workflow_dispatch:
    inputs:
      openwrtTag:
        description: '需要编译的版本'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
          sudo apt update -y
          sudo apt full-upgrade -y
          sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
          g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev \
          libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses-dev libpython3-dev \
          libreadline-dev libssl-dev libtool libyaml-dev libz-dev lld llvm lrzsz mkisofs msmtp nano \
          ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip python3-ply python3-docutils \
          python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig texinfo uglifyjs \
          upx-ucl unzip vim wget xmlto xxd zlib1g-dev zstd
          sudo -E timedatectl set-timezone "Asia/Shanghai"
    
    
    - name: 拉取编译脚本代码  
      uses: actions/checkout@master

    - name: 拉取openwrt源码
      env: 
        REPO_URL: https://github.com/immortalwrt/immortalwrt
        REPO_BRANCH: master
      run: |
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        git checkout ${{ inputs.openwrtTag }}
    
    - name: 导入依赖
      run: |
        mv import_packages.sh openwrt/
        cd openwrt && bash import_packages.sh
    
    - name: 更新及安装依赖
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a

    - name: 读取配置
      env:
        CONFIG_FILE: 'x86_64.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        cd openwrt && make defconfig
        
    - name: 下载依赖及包
      working-directory: ./openwrt
      run: |
        make download -j$(nproc) V=s
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) || make -j1 V=s
        echo "======================="
        echo "Space usage:"
        echo "======================="
        df -h
        echo "======================="
        du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
        du -h --max-depth=1 ./build_dir
        du -h --max-depth=1 ./bin

    - name: 准备编译包
      working-directory: ./openwrt
      run: |
        mkdir -p ./artifact/package
        mkdir -p ./artifact/buildinfo
        rm -rf $(find ./bin/targets/ -type d -name "packages")
        cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
        cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

    - name: 上传buildinfo
      uses: actions/upload-artifact@v3
      with:
        name: OpenWrt_buildinfo
        path: ./openwrt/artifact/buildinfo/

    - name: 上传package
      uses: actions/upload-artifact@v3
      with:
        name: OpenWrt_package
        path: ./openwrt/artifact/package/

    - name: 上传firmware
      uses: actions/upload-artifact@v3
      with:
        name: OpenWrt_firmware
        path: ./openwrt/bin/targets/
    
    - name: 企业微信markdown消息发送
      uses: wertycn/work-wechat-send-action@main
      with:
        wechat_id: ${{ secrets.CORPID }} # 企业微信id
        agent_secret: ${{ secrets.CORPSECRET }} # 应用密钥
        agent_id: ${{ secrets.AGENTID }} #应用id
        to_user:  ZhangYao # 消息接收人，多个使用竖线|分割,默认为空发送给所有人
        send_step: main # 消息发送时机 main 正常流程  post action 执行完成后发送
        content: "OpenWRT编译完成-版本：${{ inputs.openwrtTag }}"